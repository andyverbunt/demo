# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
    # specify the version you desire here
    - image: circleci/openjdk:8-jdk

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
    - checkout

    # Download and cache dependencies
    - restore_cache:
        keys:
        - demo-dependencies-{{ checksum "pom.xml" }}

    - run: mvn dependency:go-offline

    - save_cache:
        paths:
        - ~/.m2
        key: demo-dependencies-{{ checksum "pom.xml" }}

    # run tests!
    - run: |
        mvn clean verify
        mkdir -p ~/repo/deploy
        cp target/*.jar ~/repo/deploy
        cp src/main/appengine/app.yaml ~/repo/deploy
    # Persist the specified paths (workspace/echo-output) into the workspace for use in downstream job.
    - persist_to_workspace:
        # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
        # taken to be the root directory of the workspace.
        root: ~/repo/deploy
        paths:
        - *

  deploy:
    docker:
    - image: google/cloud-sdk
    steps:
    - attach_workspace:
      # Must be absolute path or relative path from working_directory
      at: /deploy
    - run:
        name: Store Service Account
        command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
    - run: |
        gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
        gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
        gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
    - run: |
        cd /deploy
        gcloud --quiet app deploy

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
    - build
    - deploy:
        requires:
        - build
        filters:  # using regex filters requires the entire branch to match
          branches:
            only: master
